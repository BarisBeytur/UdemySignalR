@{
    ViewData["Title"] = "Home Page";
}


@section Scripts
{

    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>

    <script>

        $(document).ready(() => {

            var connection = new signalR.HubConnectionBuilder()
                //.configureLogging(signalR.LogLevel.Information) // Log mesajlari icin
                .withAutomaticReconnect([1000, 2000, 3000, 4000]) // Otomatik tekrar baglanti icin
                .withUrl("https://localhost:5175/CovidHub")
                .build();

            showStatus();
            Start();

            // Functions
            function showStatus() {
                $("#conStatus").text(connection.state);
            }

            function Start() {
                connection.start().then(() => {
                    showStatus();
                    $("#loading").hide();
                    //connection.invoke("GetNames");
                    connection.invoke("GetNamesByGroup");


                })
                    .catch((err) => {
                        console.log(err);
                        setTimeout(() => Start(), 2000);
                    });
            }

            showStatus()

            // Loading operations
            connection.onreconnecting(err => {
                $("#loading").show();
                showStatus();
            });

            connection.onreconnected(connectionId => {
                $("#loading").hide();
                showStatus();
                console.log("connectionId:" + connectionId);
            });

            connection.onclose(() => {
                $("#loading").hide();
                showStatus();
                Start();
            });


            // Subscribes
            connection.on("ReceiveName", (name) => {
                $("#namesList").append(`<li class="list-group-item"> ${name}</li>`)
            })

            connection.on("ReceiveClientCount", (clientCount) => {

                $("#clientCount").text(clientCount);
            });

            connection.on("Notify", (countText) => {
                $("#notify").html(`<div class="alert alert-warning"> ${countText} </div>`)
            });

            connection.on("Error", (errorText) => {
                alert(errorText);
            });

            connection.on("ReceiveNames", (names) => {

                $("#namesList").empty();

                names.forEach((item, index) => {
                    $("#namesList").append(`<li class = "list-group-item"> ${item} </li>`);
                });
            });

            connection.on("ReceiveMessageByGroup", (name, teamId) => {

                let listName;

                if (teamId == 1)
                    listName = "#ATeamList";
                else
                    listName = "#BTeamList";

                $(`${listName}`).append(`<li class="list-group-item">${name}</li>`);
            });

            connection.on("ReceiveNamesByGroup", (teamDic) => {

                for (let teamId in teamDic) {
                    let listName;

                    if (teamId == 1)
                        listName = "#ATeamList";
                    else
                        listName = "#BTeamList";

                    teamDic[teamId].forEach((user, index) => {
                        $(`${listName}`).append(`<li class="list-group-item">${user.name}</li>`);
                    });
                }
            });

            connection.on("ReceiveProduct", (product) => {
                console.log(product);
            });


            // Clicks
            $("#btnNameSave").click(() => {

                connection.invoke("SendName", $("#txtName").val()).catch((err) =>
                    console.log(err))
            })
            $("#btnNameTeam").click(() => {
                let name = $("#txtName").val();

                let teamName = $("input[type=radio]:checked").val();

                if (teamName == null) {
                    alert("Takım seçiniz");
                    return;
                }

                connection.invoke("SendNameByGroup", name, teamName).catch((err) => {
                    console.log(err);
                });
            });

            $("input[type=radio]").change(() => {

                let value = $(`input[type=radio]:checked`).val();

                if (value == "Team A") {
                    connection.invoke("AddToGroup", value);

                    connection.invoke("RemoveToGroup", "Team B");
                }
                else {
                    connection.invoke("AddToGroup", value);

                    connection.invoke("RemoveToGroup", "Team A");
                }
            });

            $("#btnProduct").click(() => {
                let product = { "Id": 1, "Name": "Kalem", "Price": 100, "Stock": 200 };
                connection.invoke("SendProduct", product);
            });

            

        });


    </script>

}

<div class="row">
    <div class="col-md-8 offset-2">
        <input class="form-control" type="text" id="txtName" />
        <hr />
        <button class="btn btn-primary" id="btnNameSave">İsim Kaydet</button>
        <button class="btn btn-warning" id="btnNameTeam">İsim Kaydet(Takım) </button>

        <button class="btn btn-danger" id="btnProduct">Ürün Gönder</button>

        <br />
        <br />
        <div class="alert alert-info">
            <div style="float:left;">
                Bağlantı Durumu: <strong id="conStatus"></strong>
                - Client Sayısı <strong id="clientCount"></strong>
            </div>
            <div style="float:right;">
                <div id="loading" class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>

        <div id="notify"></div>

    </div>

</div>

<div class="row">

    <div class="col-md-8 offset-md-2">
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup" value="Team A" />
            <label class="form-check-label">A Takımı</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup" value="Team B" />
            <label class="form-check-label">B Takımı</label>
        </div>
    </div>

    <div class="col-md-8 offset-2">


        <div class="row">
            <div class="col-md-6">
                <h2>A Takımı</h2>
                <ul class="list-group" id="ATeamList"></ul>

            </div>
            <div class="col-md-6">
                <h2>B Takımı</h2>
                <ul class="list-group" id="BTeamList"></ul>

            </div>
        </div>



    </div>
</div>
